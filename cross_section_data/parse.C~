{
  ifstream a("/w/hallb-scifs17exp/clas12/markov/simulation/inclusive_generator/cross_section_calculation/smallSteps26Reserve.dat");
  float zhopa;
  float q2, w;
  float wBin = 0;
  float q2Bin = 0;
  float csV = 0;
  float csRCV = 0;
  TH1F *cs[20];
  TH1F *csRC[20];
  TH1F *RC[20];
  TFile f("resRC.root", "recreate");
  for (int q = 0; q < 20; q++){
    cs[q] = new TH1F(Form("csQ%d", q + 1), Form("csQ%d", q + 1), 250, 0, 5);
    csRC[q] = new TH1F(Form("csRCQ%d", q + 1), Form("csRCQ%d", q + 1), 250, 0, 5);
    RC[q] = new TH1F(Form("RCQ%d", q + 1), Form("RCQ%d", q + 1), 250, 0, 5);
  }
  for (int l = 0; l < 15400200; l++){
    w = 0;
    q2 = 0;
    csV = 0;
    csRCV = 0;
    for (int c = 0; c < 8; c++){
      a>>zhopa;
      if (c == 4 && zhopa > 0){
	q2 = zhopa;
      }
      if (c == 5 && zhopa > 0) {
	w = zhopa;
      }
      if (c == 6 && zhopa > 0) {
        csV = zhopa;
      }
      if (c == 7 && zhopa > 0) {
        csRCV = zhopa;
      }
      if (w*q2*csV*csRCV > 0){
	int q2Number = q2/(0.5);
	int q2Residual = int(10000*q2)%int(10000*(0.25 + 0.5*q2Number));
	//	cout << "q2 : " << q2 <<" q2Number " << q2Number << " q2Residual : " << q2Residual <<endl;
	int wNumber = int(w*10000)/int(10000*0.02);
	int wResidual = int(10000*w)%int(10000*0.02*wNumber + 0.01*10000);
	//	cout <<"w : " << w <<" wNumber " << wNumber << " wResidual " <<wResidual <<endl;
	if ((q2Residual < 25) && (wResidual < 25)){
	  cs[q2Number]->SetBinContent(wNumber, csV);
          csRC[q2Number]->SetBinContent(wNumber, csRCV);
	  //	  if (q2 > 3){
	  //cout <<"w : " << w <<" wNumber " << wNumber << " wResidual " <<wResidual <<endl;  
	  // cout << "q2 : " << q2 <<" q2Number " << q2Number << " q2Residual : " << q2Residual <<endl;  
	  //}
	}
      }
    }
  }



  for (int q = 0; q < 20; q++){
    for (int w = 0; w < 200; w++){
      if (csRC[q]->GetBinContent(w+1) > 0){
	RC[q]->SetBinContent(w + 1, cs[q]->GetBinContent(w+1)/csRC[q]->GetBinContent(w+1));
      }
    }
    f.cd();
    csRC[q]->Write();
    cs[q]->Write();
    RC[q]->Write();
  }
}
